{"version":3,"sources":["myFirebase.js","components/AuthForm.js","components/SocialLogin.js","routes/Auth.js","components/Unweet.js","components/UnweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","fbInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","SocialLogin","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faGoogle","faGithub","Auth","faTwitter","color","size","style","marginBottom","Unweet","unweetObj","isOwner","editing","setEditing","text","newUnweet","setNewUnweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","UnweetFactory","userObj","unweet","setUnweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuid","putString","response","getDownloadURL","dataObj","createAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","unweets","setUnweets","useEffect","onSnapshot","snapshot","unweetArray","docs","map","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cab21f75.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const fbInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"myFirebase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(\"true\");\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (e) {\r\n            setError(e.message);\r\n        }\r\n    };\r\n    const toogleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form className=\"container\" onSubmit={onSubmit}>\r\n                <input\r\n                    className=\"authInput\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    className=\"authInput\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    className=\"authInput authSubmit\"\r\n                    type=\"submit\"\r\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span className=\"authSwitch\" onClick={toogleAccount}>\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { authService, fbInstance } from \"myFirebase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst SocialLogin = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new fbInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new fbInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n        <div className=\"authBtns\">\r\n            <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n            </button>\r\n            <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SocialLogin;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport SocialLogin from \"components/SocialLogin\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <SocialLogin />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"myFirebase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Unweet = ({ unweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newUnweet, setNewUnweet] = useState(unweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure?\");\r\n        if (ok) {\r\n            await dbService.doc(`unweets/${unweetObj.id}`).delete();\r\n            if (unweetObj.attachmentUrl !== \"\") {\r\n                await storageService\r\n                    .refFromURL(unweetObj.attachmentUrl)\r\n                    .delete();\r\n            }\r\n        }\r\n    };\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`unweets/${unweetObj.id}`).update({\r\n            text: newUnweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewUnweet(value);\r\n    };\r\n    return (\r\n        <div className=\"unweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form className=\"container unweetEdit\" onSubmit={onSubmit}>\r\n                        <input\r\n                            className=\"formInput\"\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your unweet\"\r\n                            value={newUnweet}\r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                        />\r\n                        <input\r\n                            className=\"formBtn\"\r\n                            type=\"submit\"\r\n                            value=\"Update Unweet\"\r\n                        />\r\n                    </form>\r\n                    <span className=\"formBtn cancelBtn\" onClick={toggleEditing}>\r\n                        Cancel\r\n                    </span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{unweetObj.text}</h4>\r\n                    {unweetObj.attachmentUrl && (\r\n                        <img src={unweetObj.attachmentUrl} />\r\n                    )}\r\n                    {isOwner && (\r\n                        <div class=\"unweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Unweet;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { dbService, storageService } from \"myFirebase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst UnweetFactory = ({ userObj }) => {\r\n    const [unweet, setUnweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (unweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuid()}`);\r\n            const response = await attachmentRef.putString(\r\n                attachment,\r\n                \"data_url\"\r\n            );\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const dataObj = {\r\n            text: unweet,\r\n            createAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"unweets\").add(dataObj);\r\n        setUnweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setUnweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form className=\"factoryForm\" onSubmit={onSubmit}>\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={unweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Tell me what you think!\"\r\n                    maxLength={120}\r\n                />\r\n                <input\r\n                    className=\"factoryInput__arrow\"\r\n                    type=\"submit\"\r\n                    value=\"&rarr;\"\r\n                />\r\n            </div>\r\n            <label className=\"factoryInput__label\" for=\"attach-file\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div\r\n                        className=\"factoryForm__clear\"\r\n                        onClick={onClearAttachment}\r\n                    >\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default UnweetFactory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Unweet from \"components/Unweet\";\r\nimport { dbService } from \"myFirebase\";\r\nimport UnweetFactory from \"components/UnweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [unweets, setUnweets] = useState([]);\r\n    useEffect(() => {\r\n        dbService.collection(\"unweets\").onSnapshot((snapshot) => {\r\n            const unweetArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setUnweets(unweetArray);\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <UnweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {unweets.map((unweet) => (\r\n                    <Unweet\r\n                        key={unweet.id}\r\n                        unweetObj={unweet}\r\n                        isOwner={unweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"myFirebase\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    className=\"formInput\"\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    autoFocus\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n        <ul\r\n            style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}\r\n        >\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon\r\n                        icon={faTwitter}\r\n                        color={\"#04AAFF\"}\r\n                        size=\"2x\"\r\n                    />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        icon={faUser}\r\n                        color={\"#04AAFF\"}\r\n                        size=\"2x\"\r\n                    />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                            ? `${userObj.displayName}의 Profile`\r\n                            : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile\r\n                                userObj={userObj}\r\n                                refreshUser={refreshUser}\r\n                            />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"myFirebase\";\r\n\r\nfunction App() {\r\n    const [init, setInit] = useState(false);\r\n    const [userObj, setUserObj] = useState(null);\r\n    useEffect(() => {\r\n        authService.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setUserObj({\r\n                    displayName: user.displayName,\r\n                    uid: user.uid,\r\n                    updateProfile: (args) => user.updateProfile(args),\r\n                });\r\n            } else {\r\n                setUserObj(null);\r\n            }\r\n            setInit(true);\r\n        });\r\n    }, []);\r\n    const refreshUser = () => {\r\n        const user = authService.currentUser;\r\n        setUserObj({\r\n            displayName: user.displayName,\r\n            uid: user.uid,\r\n            updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n    };\r\n    return (\r\n        <>\r\n            {init ? (\r\n                <AppRouter\r\n                    isLoggedIn={Boolean(userObj)}\r\n                    userObj={userObj}\r\n                    refreshUser={refreshUser}\r\n                />\r\n            ) : (\r\n                \"Loading...\"\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"stylesheets/styles.css\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}